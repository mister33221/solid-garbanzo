version: "3"
services:
  redisinsight :
    image: redis/redisinsight:latest
    container_name: my-redisinsight
    ports:
      - "5540:5540"
  redis1:
    image: redis:latest
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7000:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis2:
    image: redis:latest
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7001:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis3:
    image: redis:latest
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7002:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis4:
    image: redis:latest
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7003:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis5:
    image: redis:latest
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7004:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis6:
    image: redis:latest
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7005:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "cluster", "info" ]
      interval: 1s
      timeout: 3s
      retries: 30
  redis-cluster-creator:
    image: redis
    entrypoint: [/bin/sh,-c,'echo "yes" | redis-cli --cluster create redis1:6379 redis2:6379 redis3:6379 redis4:6379 redis5:6379 redis6:6379 --cluster-replicas 1']
    depends_on:
      redis1:
        condition: service_healthy
      redis2:
        condition: service_healthy
      redis3:
        condition: service_healthy
      redis4:
        condition: service_healthy
      redis5:
        condition: service_healthy
      redis6:
        condition: service_healthy